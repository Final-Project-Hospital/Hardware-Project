#include <WiFi.h>
#include <Firebase_ESP_Client.h>
#include "DHTesp.h"
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"
#include <time.h>  // สำหรับเวลา NTP

// WiFi และ Firebase Configuration
#define WIFI_SSID "vivo Y33T"
#define WIFI_PASSWORD "0935096372"
#define API_KEY "AIzaSyBFJYSrzujy2-ULdLSe45S9_0gOfrbjeik"
#define DATABASE_URL "https://esp32-environment-sensor-default-rtdb.firebaseio.com/"

// DHT22 Sensor Pin
#define pinDHT22 15
DHTesp dht;

// Firebase Objects
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

unsigned long sendDataPrevMillis = 0;
bool signupOK = false;

// ฟังก์ชัน sync เวลา NTP
void initTime() {
  configTime(7 * 3600, 0, "pool.ntp.org", "time.nist.gov");
  Serial.print("Waiting for NTP time sync");
  time_t now = time(nullptr);
  while (now < 8 * 3600 * 2) {
    delay(500);
    Serial.print(".");
    now = time(nullptr);
  }
  Serial.println();
  struct tm timeinfo;
  gmtime_r(&now, &timeinfo);
  Serial.print("Current time: ");
  Serial.println(asctime(&timeinfo));
}

// ฟังก์ชันดึงเวลาปัจจุบันในรูปแบบ string
String getTimeString() {
  time_t now = time(nullptr);
  struct tm timeinfo;
  localtime_r(&now, &timeinfo);

  char timeStr[25];
  strftime(timeStr, sizeof(timeStr), "%Y-%m-%d %H:%M:%S", &timeinfo);
  return String(timeStr);  // เช่น "2025-04-16 14:22:30"
}

// แปลงเวลาที่ได้ให้ใช้เป็น path ได้ใน Firebase
String sanitizeTimeString(String rawTime) {
  rawTime.replace(" ", "_");  // แทนช่องว่างด้วย _
  rawTime.replace(":", "-");  // แทน : ด้วย -
  return rawTime;             // เช่น "2025-04-16_14-22-30"
}

void setup() {
  Serial.begin(115200);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(300);
  }
  Serial.println("\nConnected with IP: " + WiFi.localIP().toString());

  initTime();  // Sync เวลา NTP

  // ตั้งค่า Firebase
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;
  config.token_status_callback = tokenStatusCallback;

  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("Firebase sign-up successful");
    signupOK = true;
  } else {
    Serial.printf("Sign-up failed: %s\n", config.signer.signupError.message.c_str());
  }

  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  // เริ่มต้นเซ็นเซอร์ DHT
  dht.setup(pinDHT22, DHTesp::DHT22);
}

void loop() {
  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 10000 || sendDataPrevMillis == 0)) {
    sendDataPrevMillis = millis();

    float humidity = dht.getHumidity();
    float temperature = dht.getTemperature();

    if (isnan(humidity) || isnan(temperature)) {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }

    String timeStr = getTimeString();                  // เวลา: 2025-04-16 14:22:30
    String safeTimeStr = sanitizeTimeString(timeStr);  // เวลา: 2025-04-16_14-22-30
    String path = "/sensorData/" + safeTimeStr;

    FirebaseJson json;
    json.set("temperature", temperature);
    json.set("humidity", humidity);
    json.set("timestamp", timeStr);  // เก็บ timestamp แบบ readable

    if (Firebase.RTDB.setJSON(&fbdo, path.c_str(), &json)) {
      Serial.println("Data saved at: " + path);
    } else {
      Serial.println("FAILED: " + fbdo.errorReason());
    }
  }
}
